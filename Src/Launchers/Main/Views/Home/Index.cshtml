@using Ccf.Ck.Libs.Web.Bundling
@using Ccf.Ck.Models.KraftModule
@using Ccf.Ck.Models.Settings
@using System.Threading
@using Ccf.Ck.Web.Middleware
@addTagHelper *, Ccf.Ck.Utilities.Profiling

@inject IJsonHelper Json;

@model KraftGlobalConfigurationSettings

@{ ViewData["Title"] = Model.GeneralSettings.DefaultStartModule; }

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="initial-scale=1, width=device-width, maximum-scale=1, minimum-scale=1, user-scalable=no">
    @{ if (Model.GeneralSettings.ProgressiveWebApp != null && !string.IsNullOrEmpty(Model.GeneralSettings.ProgressiveWebApp.Manifest))
        {
            <link rel="manifest" href="@Model.GeneralSettings.ProgressiveWebApp.Manifest">
        } }

    <title>@ViewData["Title"]</title>
    @BundleCollection.Instance.Profile(Model.GeneralSettings.DefaultStartModule).KraftStyles(string.IsNullOrWhiteSpace(Model.GeneralSettings.Theme) ? "Module.dep" : Model.GeneralSettings.Theme + ".dep").Render()
</head>
<body>
    <div id="t" class="themed">
    </div>
    @{
        var bindKraftConfiguration = Html.Raw(Model.GeneralSettings.BindKraftConfiguration);
    }
    <script type="text/javascript">
            //global base path
        g_ApplicationBasePath = "@Url.Content("~/")";
        g_ApplicationCulture = "@Thread.CurrentThread.CurrentCulture.IetfLanguageTag";
        g_BindKraftConfiguration = @bindKraftConfiguration;
    </script>
    @{
        ToolSettings tool = KraftToolsRouteBuilder.GetTool(Model, "profiler");
        if (tool != null && tool.Enabled)//Profiler enabled enabled from configuration
        {
            <kraft-profiler />
        }
    }
    @BundleCollection.Instance.Profile(Model.GeneralSettings.DefaultStartModule).KraftScripts().Render()
</body>
</html>






